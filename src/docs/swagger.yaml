# @format

openapi: 3.0.0
info:
    version: 1.0.0
    title: "Result App"
    description: "This is a sample server for Result App"
servers:
    # Added by API Auto Mocking Plugin
    - description: SwaggerHub API Auto Mocking
      url: https://virtserver.swaggerhub.com/Al-Habib18/result-app/1.0.0
    - description: dev server
      url: http://localhost:4005/api/v1

tags:
    - name: Auth
      description: auth operations
    - name: users
      description: users operations

    - name: subjects
      description: subjects operations
    - name: upload
      description: upload operations

paths:
    # Users
    /users:
        post:
            tags: [users]
            description: create a new user
            summary: create a new user
            security:
                - bearerAuth: []

            requestBody:
                content:
                    "application/json":
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    example: Al-Habib
                                email:
                                    type: string
                                    example: 0dIyK@example.com
                                phone:
                                    type: string
                                    example: 123456789
                                password:
                                    type: string
                                    example: password
                                role:
                                    type: string
                                    enum: [ADMIN, USER]
                                    example: USER

                            required: [name, email, phone, password]

            responses:
                "201":
                    description: User Created successfully
                    content:
                        "application/json":
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: User Created successfully
                                    data:
                                        $ref: "#/components/schemas/User"

                "400":
                    $ref: "#/components/responses/400"

                "500":
                    $ref: "#/components/responses/500"
        get:
            tags: [users]
            security:
                - bearerAuth: []
            description: Retrive a list of users
            summary: Retrive a list of users
            parameters:
                - $ref: "#/components/parameters/pageParam"
                - $ref: "#/components/parameters/limitParam"
                - $ref: "#/components/parameters/statusParam"
            responses:
                "200":
                    description: Users retrive  successful
                    content:
                        "application/json":
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: A List of Users Retrived successfully
                                    data:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/User"

                "400":
                    $ref: "#/components/responses/400"

                "500":
                    $ref: "#/components/responses/500"

    /users/{id}:
        get:
            tags: [users]
            security:
                - bearerAuth: []
            summary: Retrive a single user by id
            description: Retrive a single user by id
            parameters:
                - $ref: "#/components/parameters/idPathParam"
            responses:
                "200":
                    description: User retrive  successful
                    content:
                        "application/json":
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: User retrive  successful
                                    data:
                                        $ref: "#/components/schemas/User"

                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
                "500":
                    $ref: "#/components/responses/500"
        put:
            tags: [users]
            security:
                - bearerAuth: []
            summary: update a user by id
            description: update a user
            parameters:
                - $ref: "#/components/parameters/idPathParam"
            requestBody:
                content:
                    "application/json":
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    example: Al-Habib
                                email:
                                    type: string
                                    example: 0dIyK@example.com
                                phone:
                                    type: string
                                    example: 123456789

            responses:
                "200":
                    description: User updated successfully
                    content:
                        "application/json":
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: User updated successfully
                                    data:
                                        $ref: "#/components/schemas/User"

                "400":
                    $ref: "#/components/responses/400"

                "401":
                    $ref: "#/components/responses/401"

                "404":
                    $ref: "#/components/responses/404"

                "500":
                    $ref: "#/components/responses/500"
        delete:
            tags: [users]
            security:
                - bearerAuth: []
            summary: delete a user by id
            description: delete a user
            parameters:
                - $ref: "#/components/parameters/idPathParam"
            responses:
                "204":
                    description: User deleted successfully
                    content:
                        "application/json":
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: User deleted successfully

                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
                "500":
                    $ref: "#/components/responses/500"
    /users/update/{id}:
        put:
            tags: [users]
            description: update a user by id without password
            security:
                - bearerAuth: []
            summary: update a user by id without password
            parameters:
                - $ref: "#/components/parameters/idPathParam"
            requestBody:
                content:
                    "application/json":
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    example: Al-Habib
                                email:
                                    type: string
                                    example: 0dIyK@example.com
                                phone:
                                    type: string
                                    example: 123456789
                                role:
                                    type: string
                                    enum: [ADMIN, USER]
                                    example: ADMIN
                                verified:
                                    type: boolean
                                    example: true
                                status:
                                    type: string
                                    enum: [ACTIVE, INACTIVE, SUSPENDED]
                                    example: ACTIVE

            responses:
                "200":
                    description: User updated successfully
                    content:
                        "application/json":
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: User updated successfully
                                    data:
                                        $ref: "#/components/schemas/User"

                "400":
                    $ref: "#/components/responses/400"

                "401":
                    $ref: "#/components/responses/401"

                "404":
                    $ref: "#/components/responses/404"

                "500":
                    $ref: "#/components/responses/500"

    /users/change-password/{id}:
        put:
            tags: [users]
            description: change password
            security:
                - bearerAuth: []
            summary: change password
            parameters:
                - $ref: "#/components/parameters/idPathParam"
            requestBody:
                content:
                    "application/json":
                        schema:
                            type: object
                            properties:
                                password:
                                    type: string
                                    example: password
            responses:
                "200":
                    description: Password changed successfully
                    content:
                        "application/json":
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: Password changed successfully

                "400":
                    $ref: "#/components/responses/400"

                "401":
                    $ref: "#/components/responses/401"

                "404":
                    $ref: "#/components/responses/404"

                "500":
                    $ref: "#/components/responses/500"

    /users/search/email/{email}:
        get:
            tags: [users]
            security:
                - bearerAuth: []
            summary: Retrive a single user by email
            description: Retrive a single user by email
            parameters:
                - $ref: "#/components/parameters/emailPathParam"
            responses:
                "200":
                    description: User retrive  successful
                    content:
                        "application/json":
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: User retrive  successful
                                    data:
                                        $ref: "#/components/schemas/User"

                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
                "500":
                    $ref: "#/components/responses/500"
    /users/search/phone/{phone}:
        get:
            tags: [users]
            security:
                - bearerAuth: []
            summary: Retrive a single user by phone
            description: Retrive a single user by phone
            parameters:
                - $ref: "#/components/parameters/phonePathParam"
            responses:
                "200":
                    description: User retrive  successful
                    content:
                        "application/json":
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: User retrive  successful
                                    data:
                                        $ref: "#/components/schemas/User"

                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
                "500":
                    $ref: "#/components/responses/500"
    # Auth Routes
    /auth/register:
        post:
            description: Create a new account
            tags: [Auth]
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    example: Al-habib
                                email:
                                    type: string
                                    example: alhabib@gmail.com
                                password:
                                    type: string
                                    format: password
                                    example: pass123
                                phone:
                                    type: string
                                    example: 01313306149
                                role:
                                    type: string
                                    enum: [ADMIN, USER]
                                    default: USER

            responses:
                201:
                    description: Registration successfull
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: Signup successfull
                                    data:
                                        type: object
                                        properties:
                                            access_token:
                                                type: string
                                                example: adkljklsdfddfsfsdf
                                    links:
                                        type: object
                                        properties:
                                            login:
                                                type: string
                                                example: /auth/login

                400:
                    $ref: "#/components/responses/400"
                "500":
                    $ref: "#/components/responses/500"
    /auth/login:
        post:
            description: Login to your account
            tags: [Auth]
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    format: email
                                    example: alhabib@gmail.com
                                password:
                                    type: string
                                    format: password
                                    example: pass123
                            required: [email, password]
            responses:
                "200":
                    description: Singup succefull
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    code:
                                        type: integer
                                        format: int 32
                                        example: 200
                                    message:
                                        type: string
                                        example: login successfull
                                    data:
                                        type: object
                                        properties:
                                            access_token:
                                                type: string
                                                example: sdfasdxasdfer434sdfsdfsd123fsdfsdfs123dfafwerwergre312
                                            refresh_token:
                                                type: string
                                                example: sdfasdxasdfer434sdfsdfsd123fsdfsdfs123dfafwerwergre312
                                    links:
                                        type: object
                                        properties:
                                            self:
                                                type: string
                                                example: "/auth/login"
                "400":
                    $ref: "#/components/responses/400"
                "500":
                    $ref: "#/components/responses/500"
    /auth/refresh:
        post:
            description: Login to your account
            tags: [Auth]
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                refresh_token:
                                    type: string
                                    example: sdf@1212#@@f429&93sdf32r
            responses:
                "200":
                    description: login succefull
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    code:
                                        type: integer
                                        format: int 32
                                        example: 200
                                    message:
                                        type: string
                                        example: login successfull
                                    data:
                                        type: object
                                        properties:
                                            access_token:
                                                type: string
                                                example: sdf!as$3dx%as$dfersdfsdf
                                            refresh_token:
                                                type: string
                                                example: 2rfdslfk3f$#@#sdf!sdfsd$
                                    links:
                                        type: object
                                        properties:
                                            self:
                                                type: string
                                                example: "/auth/singin"
                "400":
                    $ref: "#/components/responses/400"
                "500":
                    $ref: "#/components/responses/500"
    /auth/logout:
        post:
            description: Logout from your account
            tags: [Auth]
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                refresh_token:
                                    type: string
                                    example: sd$f3#d@2sd#@f429&93sdf32r

            responses:
                "200":
                    description: logout successful
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
                "500":
                    $ref: "#/components/responses/500"
    /auth/forget-password:
        put:
            tags: [users]
            description: forget password
            security:
                - bearerAuth: []
            summary: forget password
            parameters:
                - $ref: "#/components/parameters/idPathParam"
            requestBody:
                content:
                    "application/json":
                        schema:
                            type: object
                            properties:
                                password:
                                    type: string
                                    example: password
            responses:
                "200":
                    description: Password changed successfully
                    content:
                        "application/json":
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: Password changed successfully

                "400":
                    $ref: "#/components/responses/400"

                "401":
                    $ref: "#/components/responses/401"

                "404":
                    $ref: "#/components/responses/404"

                "500":
                    $ref: "#/components/responses/500"

    # Subjects

    /subjects:
        post:
            tags: [subjects]
            description: create a new subjects
            summary: create a new subjects
            security:
                - bearerAuth: []

            requestBody:
                content:
                    "application/json":
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    example: Python programming
                                code:
                                    type: string
                                    example: 285585
                                theoryFailed:
                                    type: array
                                    example: [608690, 608691, 608692]
                                practicalFailed:
                                    type: array
                                    example: [608690, 608691, 608692]

                            required: [code]

            responses:
                "201":
                    description: Subject Created successful
                    content:
                        "application/json":
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: Subject Created successful
                                    data:
                                        type: object
                                        properties:
                                            id:
                                                type: string
                                                example: ksf12kdfh23kd23
                                            name:
                                                type: string
                                                example: Python programming
                                            code:
                                                type: string
                                                example: 285585
                                            theoryFailed:
                                                type: array
                                                example:
                                                    [608690, 608691, 608692]
                                            practicalFailed:
                                                type: array
                                                example:
                                                    [608690, 608691, 608692]
                                            createdAt:
                                                type: string
                                                format: date-time

                "400":
                    $ref: "#/components/responses/400"
                "500":
                    $ref: "#/components/responses/500"
        get:
            description: Retrive a list of Subjects
            summary: Retrive a list of Subjects
            tags: [subjects]
            security:
                - bearerAuth: []

            parameters:
                - $ref: "#/components/parameters/pageParam"
                - $ref: "#/components/parameters/limitParam"
            responses:
                "200":
                    description: Get a list of Subjects
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: A List of Subject Retrived successfully
                                    data:
                                        type: array
                                        items:
                                            allOf:
                                                - type: object

                                                  properties:
                                                      id:
                                                          type: string
                                                          example: ksf12kdfh23kd23
                                                      name:
                                                          type: string
                                                          example: Python programming
                                                      code:
                                                          type: string
                                                          example: 285585
                                                      theoryFailed:
                                                          type: array
                                                          example:
                                                              [
                                                                  608690,
                                                                  608691,
                                                                  608692,
                                                              ]
                                                      practicalFailed:
                                                          type: array
                                                          example:
                                                              [
                                                                  608690,
                                                                  608691,
                                                                  608692,
                                                              ]
                                                      createdAt:
                                                          type: string
                                                          format: date-time

                                                - $ref: "#/components/schemas/Timestamp"
                                    pagination:
                                        $ref: "#/components/schemas/Pagination"
                                    links:
                                        type: object
                                        properties:
                                            self:
                                                type: string
                                                format: url
                                                example: /subjects?page=2&limit=5
                                            next:
                                                type: string
                                                format: url
                                                example: /subjects?page=3&limit=5
                                            prev:
                                                type: string
                                                format: url
                                                example: /subjects?page=1&limit=5
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
                "500":
                    $ref: "#/components/responses/500"
        delete:
            tags: [subjects]
            security:
                - bearerAuth: []
            summary: Delete a Subject all subjects
            description: Delete a Subject all subjects
            responses:
                "200":
                    description: Subject deleted  successfully
                    content:
                        "application/json":
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: Subject deleted  successfully
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
                "500":
                    $ref: "#/components/responses/500"
    /subjects/{id}:
        get:
            tags: [subjects]
            security:
                - bearerAuth: []
            summary: Retrive a Subject by id
            description: Retrive a single Subject by id
            parameters:
                - $ref: "#/components/parameters/idPathParam"
            responses:
                "200":
                    description: Subject  retrive  successful
                    content:
                        "application/json":
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: Subject retrive  successful
                                    data:
                                        $ref: "#/components/schemas/Subject"

                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
                "500":
                    $ref: "#/components/responses/500"
        put:
            tags: [subjects]
            security:
                - bearerAuth: []
            description: Update a Subject By id
            summary: Update a Subject By id
            parameters:
                - $ref: "#/components/parameters/idPathParam"
            requestBody:
                content:
                    "application/json":
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    example: Python programming
                                code:
                                    type: string
                                    example: 285585
                                theoryFailed:
                                    type: array
                                    example: [608690, 608691, 608692]
                                practicalFailed:
                                    type: array
                                    example: [608690, 608691, 608692]

            responses:
                "200":
                    description: Subject updated  successfully
                    content:
                        "application/json":
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: Subject updated  successfully
                                    data:
                                        $ref: "#/components/schemas/Subject"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
                "500":
                    $ref: "#/components/responses/500"
        delete:
            tags: [subjects]
            security:
                - bearerAuth: []
            description: Delete a Subject By id
            summary: Delete a Subject By id
            parameters:
                - $ref: "#/components/parameters/idPathParam"
            responses:
                "204":
                    description: Subject deleted  successfully
                    content:
                        "application/json":
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: Subject deleted  successfully
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
                "500":
                    $ref: "#/components/responses/500"
    /subjects/search/codes/{code}:
        get:
            tags: [subjects]
            description: Retrive a single Subject by code
            summary: Retrive a Subject by code
            security:
                - bearerAuth: []

            parameters:
                - $ref: "#/components/parameters/codePathParam"
            responses:
                "200":
                    description: Subject retrive  successful
                    content:
                        "application/json":
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: Subject retrive  successful
                                    data:
                                        $ref: "#/components/schemas/Subject"

                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
                "500":
                    $ref: "#/components/responses/500"

    # search a subject by name
    # /subjects/search/names/{name}:
    #     get:
    #         tags: [subjects]
    #         parameters:
    #             - $ref: "#/components/parameters/namePathParam"
    #         responses:
    #             "200":
    #                 description: Subject retrive  successful
    #                 content:
    #                     "application/json":
    #                         schema:
    #                             type: object
    #                             properties:
    #                                 message:
    #                                     type: string
    #                                     example: Subject retrive  successful
    #                                 data:
    #                                     $ref: "#/components/schemas/Subject"

    #             "400":
    #                 $ref: "#/components/responses/400"
    #             "401":
    #                 $ref: "#/components/responses/401"
    #             "404":
    #                 $ref: "#/components/responses/404"
    #             "500":
    #                 $ref: "#/components/responses/500"

    # update a subject by code
    # /subjects/update/codes/{code}:
    #     put:
    #         tags: [subjects]
    #         parameters:
    #             - $ref: "#/components/parameters/codePathParam"
    #         requestBody:
    #             content:
    #                 "application/json":
    #                     schema:
    #                         type: object
    #                         properties:
    #                             name:
    #                                 type: string
    #                                 example: Python programming
    #                             code:
    #                                 type: string
    #                                 example: 285585
    #                             theoryFailed:
    #                                 type: array
    #                                 example: [608690, 608691, 608692]
    #                             practicalFailed:
    #                                 type: array
    #                                 example: [608690, 608691, 608692]
    #                         required:
    #                             - code
    #         responses:
    #             "200":
    #                 description: Subject updated  successfully
    #                 content:
    #                     "application/json":
    #                         schema:
    #                             type: object
    #                             properties:
    #                                 message:
    #                                     type: string
    #                                     example: Subject updated  successfully
    #                                 data:
    #                                     $ref: "#/components/schemas/Subject"
    #             "400":
    #                 $ref: "#/components/responses/400"
    #             "401":
    #                 $ref: "#/components/responses/401"
    #             "404":
    #                 $ref: "#/components/responses/404"
    #             "500":
    #                 $ref: "#/components/responses/500"
    # /subjects/update/names/{name}:
    #     put:
    #         tags: [subjects]
    #         parameters:
    #             - $ref: "#/components/parameters/namePathParam"
    #         requestBody:
    #             content:
    #                 "application/json":
    #                     schema:
    #                         type: object
    #                         properties:
    #                             name:
    #                                 type: string
    #                                 example: Python programming
    #                             code:
    #                                 type: string
    #                                 example: 285585
    #                             theoryFailed:
    #                                 type: array
    #                                 example: [608690, 608691, 608692]
    #                             practicalFailed:
    #                                 type: array
    #                                 example: [608690, 608691, 608692]
    #                         required:
    #                             - name
    #         responses:
    #             "200":
    #                 description: Subject updated  successfully
    #                 content:
    #                     "application/json":
    #                         schema:
    #                             type: object
    #                             properties:
    #                                 message:
    #                                     type: string
    #                                     example: Subject updated  successfully
    #                                 data:
    #                                     $ref: "#/components/schemas/Subject"
    #             "400":
    #                 $ref: "#/components/responses/400"
    #             "401":
    #                 $ref: "#/components/responses/401"
    #             "404":
    #                 $ref: "#/components/responses/404"
    #             "500":
    #                 $ref: "#/components/responses/500"

    # /subjects/delete/{code}:
    #     delete:
    #         tags: [subjects]
    #         parameters:
    #             - $ref: "#/components/parameters/codePathParam"
    #         responses:
    #             "204":
    #                 description: Subject deleted  successfully
    #             "400":
    #                 $ref: "#/components/responses/400"
    #             "401":
    #                 $ref: "#/components/responses/401"
    #             "404":
    #                 $ref: "#/components/responses/404"
    #             "500":
    #                 $ref: "#/components/responses/500"

    /upload:
        post:
            tags: [upload]
            description: Upload a file
            security:
                - bearerAuth: []

            requestBody:
                content:
                    "multipart/form-data":
                        schema:
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: binary
            responses:
                "200":
                    description: File uploaded successfully
                    content:
                        "application/json":
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: File uploaded successfully
                "400":
                    $ref: "#/components/responses/400"
                "500":
                    $ref: "#/components/responses/500"

    /subjects/{code}/remove-rolls:
        put:
            tags: [subjects]
            summary: Remove rolls from a subject
            description: Remove rolls from a subject
            security:
                - bearerAuth: []
            parameters:
                - $ref: "#/components/parameters/codePathParam"
            requestBody:
                content:
                    "application/json":
                        schema:
                            type: object
                            properties:
                                theoryFailed:
                                    type: array
                                    example: ["231231", "231231", "231231"]
                                practicalFailed:
                                    type: array
                                    example: ["231231", "231231", "231231"]
            responses:
                "200":
                    description: Subject updated  successfully
                    content:
                        "application/json":
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: Subject updated  successfully
                                    data:
                                        $ref: "#/components/schemas/Subject"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
                "500":
                    $ref: "#/components/responses/500"
    /subjects/{code}/add-rolls:
        put:
            tags: [subjects]
            summary: Add rolls to a subject
            description: Add rolls to a subject
            security:
                - bearerAuth: []
            parameters:
                - $ref: "#/components/parameters/codePathParam"
            requestBody:
                content:
                    "application/json":
                        schema:
                            type: object
                            properties:
                                theoryFailed:
                                    type: array
                                    example: ["231231", "231231", "231231"]
                                practicalFailed:
                                    type: array
                                    example: ["231231", "231231", "231231"]
            responses:
                "200":
                    description: Subject updated  successfully
                    content:
                        "application/json":
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: Subject updated  successfully
                                    data:
                                        $ref: "#/components/schemas/Subject"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
                "500":
                    $ref: "#/components/responses/500"

components:
    schemas:
        Subject:
            type: object
            properties:
                id:
                    type: string
                    example: ksf12kdfh23kd23
                name:
                    type: string
                    example: Python programming
                code:
                    type: string
                    example: 285585
                theoryFailed:
                    type: array
                    example: [608690, 608691, 608692]
                practicalFailed:
                    type: array
                    example: [608690, 608691, 608692]
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
        User:
            type: object
            properties:
                id:
                    type: string
                    example: ksf12kdfh23kd23
                name:
                    type: string
                    example: Al-Habib
                email:
                    type: string
                    example: 0dIyK@example.com
                phone:
                    type: string
                    example: 123456789
                role:
                    type: string
                    enum: [ADMIN, USER]
                    example: USER

                verified:
                    type: boolean
                    example: true
                status:
                    type: string
                    enum:
                        - ACTIVE
                        - INACTIVE
                        - SUSPENDED
                    example: ACTIVE
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time

        Timestamp:
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
            required: [createdAt, updatedAt]
        Pagination:
            type: object
            properties:
                page:
                    type: integer
                    format: int32
                    example: 2
                limit:
                    type: integer
                    format: int32
                    example: 10

                next:
                    type: integer
                    format: int32
                    example: 3
                prev:
                    type: integer
                    format: int32
                    example: 3
                totalPage:
                    type: integer
                    format: int32
                    example: 5
                totalItems:
                    type: integer
                    format: int32
                    example: 400
            required:
                - page
                - limit
                - totalPage
                - totalItems

    responses:
        "400":
            description: "bad request"
            content:
                "application/json":
                    schema:
                        type: object
                        properties:
                            code:
                                type: integer
                                format: int32
                                example: 400
                            error:
                                type: string
                                example: Bad request
                            message:
                                type: string
                                example: We are sorry for the inconvenience. Please try again later

        "404":
            description: "not found"
            content:
                "application/json":
                    schema:
                        type: object
                        properties:
                            code:
                                type: integer
                                format: int32
                                example: 404
                            error:
                                type: string
                                example: not found
                            message:
                                type: string
                                example: We are sorry for the inconvenience. Please try again later

        "401":
            description: unauthorized
            content:
                "application/json":
                    schema:
                        type: object
                        properties:
                            code:
                                type: integer
                                format: int32
                                example: 401
                            error:
                                type: string
                                example: unauthorized
                            message:
                                type: string
                                example: You don't have the right permission

        "500":
            description: Internal Server Error
            content:
                "application/json":
                    schema:
                        type: object
                        properties:
                            code:
                                type: integer
                                format: int32
                                example: 500
                            error:
                                type: string
                                example: internale server Error
                            message:
                                type: string
                                example: We are sorry for the inconvenience. Please try again later
    parameters:
        pageParam:
            in: query
            name: page
            description: current page number
            schema:
                type: integer
                format: int32
                example: 3
        limitParam:
            in: query
            name: limit
            description: maximum items to be returned
            schema:
                type: integer
                format: int32
                example: 10
        statusParam:
            in: query
            name: status
            description: item status
            schema:
                type: string
                enum: [ACTIVE, INACTIVE, SUSPENDED]
                example: ACTIVE
        idPathParam:
            in: path
            name: id
            required: true
            description: item id
            schema:
                type: string
                example: kdsf12ksdf32sdf232
        codePathParam:
            in: path
            name: code
            required: true
            description: item code
            schema:
                type: string
                example: 285585
        namePathParam:
            in: path
            name: name
            required: true
            description: item name
            schema:
                type: string
                example: Python programming
        emailPathParam:
            in: path
            name: email
            required: true
            description: item email
            schema:
                type: string
                example: 0dIyK@example.com
        phonePathParam:
            in: path
            name: phone
            required: true
            description: item phone
            schema:
                type: string
                example: 01890023456
